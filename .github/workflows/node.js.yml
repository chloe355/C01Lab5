# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request: 
    branches: ["main", "dev"]

jobs:
  build:
    name: Backend test
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: --health-cmd="mongo --eval 'db.runCommand({ping: 1})'" --health-interval=10s --health-timeout=5s --health-retries=5

    defaults:
      run:
        working-directory: ./quirknotes/backend

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm i

      - name: Start server
        run: |
          node server.js &
          sleep 5 # Waits 5 seconds to ensure the server has started

      - name: Run tests
        env:
          MONGODB_URI: mongodb://localhost:27017/mytestdb # Adjust based on your actual MongoDB URI
        run: npm test

      - name: Kill Node server
        if: always()
        run: kill $(lsof -t -i:3000) || true # Adjust the port if your server uses a different one


  # name: Node.js CI

  # on:
  #   push:
  #       branches: ["main"]
  #   pull_request: 
  #         branches: ["main", "fix/workflow-changes"]

  # jobs:
  #     build:
  #         name: Backend test
  #         runs-on: ubuntu-latest

  #         defaults:
  #             run:
  #                 working-directory: ./quirknotes/backend

  #         strategy:
  #             matrix:
  #                 node-version: [20.x]

  #         services:
  #           mongodb:
  #             image: mongo
  #             ports:
  #               - 27017:27017
  #             #options: --health-cmd="mongo --eval 'db.runCommand({ping: 1})'" --health-interval=10s --health-timeout=5s --health-retries=5

  #         steps:
  #             - uses: actions/checkout@v3

  #             - name: Use Node.js ${{ matrix.node-version }}
  #               uses: actions/setup-node@v3
  #               with:
  #                 node-version: ${{ matrix.node-version }}
  #             - run: npm i
  #             - run: npm test

  #             - name: Start MongoDB
  #               run: sudo service mongodb start 
              
  #             - name: Start server
  #               run: node server.js &
  #               env:
  #                 MONGODB_URI: mongodb://localhost:27017/db
  #                 #MONGODB_URI: mongodb://localhost:4000
  #                 #C:\Users\ASUS\Documents\GitHub\C01Lab5\quirknotes\backend\data\db
  #             - name: Run tests
  #               run: npm test
  #               env:
  #                 MONGODB_URI: mongodb://localhost:27017/db
